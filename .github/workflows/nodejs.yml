name: Node CI
on:
  push:
    branches: [master]
    tags:
      - v*
  pull_request:
    branches: [master]
env:
  IMAGE_NAME: koa-boilerplate
jobs:
  build:
    runs-on: ubuntu-20.04
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        ports:
          - 5432:5432
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: db_test_pass
          POSTGRES_DB: database_test
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    strategy:
      matrix:
        node-version: [14.x. 16.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: yarn, yarn build, yarn test
        run: |
          yarn --frozen-lockfile
          yarn build
          NODE_ENV=test npx sequelize-cli db:migrate
          yarn test
        env:
          CI: true
      - uses: codecov/codecov-action@v1
        if: ${{ matrix.node-version == '14.x' }}
        name: Upload Coverage
  docker-test:
    runs-on: ubuntu-20.04
    if: github.event_name == 'pull_request'
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Run tests
        run: docker build . --file Dockerfile
  docker-push:
    needs: build
    runs-on: ubuntu-20.04
    if: github.event_name == 'push'
    steps:
      - uses: actions/checkout@v2
      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME
      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin
      - name: Push image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
